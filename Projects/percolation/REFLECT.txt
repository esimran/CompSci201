Name: Simran Singh
NetID: ss810
Hours Spent: 6.5
Consulted With: Shyam Pradheep
Resources Used: NONE
Impressions: I liked the project. It took me a bit of time to figure out what the source and sink square thing was from the assignment, but Piazza helped
as many people had the same question.
----------------------------------------------------------------------
Data: Times are milliseconds, Size is N, Iter is T
PercolationDFS:
Time: 89 Size: 50 Iter: 5
Mean: 0.58872 SD: 0.01541012654068745 CI: (0.5752124285291546, 0.6022275714708455)
Time: 68 Size: 50 Iter: 10
Mean: 0.58928 SD: 0.010968723211426607 CI: (0.5824815149190753, 0.5960784850809248)
Time: 135 Size: 50 Iter: 20
Mean: 0.59424 SD: 0.01929162348901992 CI: (0.585785073222515, 0.6026949267774849)
Time: 203 Size: 50 Iter: 40
Mean: 0.58483 SD: 0.026304627651754283 CI: (0.5766781114345454, 0.5929818885654545)
Time: 278 Size: 100 Iter: 5
Mean: 0.6026800000000001 SD: 0.009372673044548165 CI: (0.5944644898490722, 0.610895510150928)
Time: 516 Size: 100 Iter: 10
Mean: 0.5929899999999999 SD: 0.015364927595013275 CI: (0.5834667192123721, 0.6025132807876277)
Time: 976 Size: 100 Iter: 20
Mean: 0.595835 SD: 0.014101708556431246 CI: (0.5896546537295102, 0.6020153462704898)
Time: 1883 Size: 100 Iter: 40
Mean: 0.5928274999999998 SD: 0.014547957606235333 CI: (0.5883190412287509, 0.5973359587712488)
Time: 3119 Size: 200 Iter: 5
Mean: 0.587495 SD: 0.00573330184099878 CI: (0.5824695393604168, 0.5925204606395832)
Time: 5784 Size: 200 Iter: 10
Mean: 0.5928575 SD: 0.009302934498198818 CI: (0.587091481460218, 0.5986235185397821)
Time: 12950 Size: 200 Iter: 20
Mean: 0.5919562500000001 SD: 0.007058355793891236 CI: (0.5888627891805541, 0.595049710819446)
Time: 23708 Size: 200 Iter: 40
Mean: 0.590390625 SD: 0.009954001075942862 CI: (0.5873058481072888, 0.5934754018927111)
Time: 44378 Size: 400 Iter: 5
Mean: 0.59397625 SD: 0.0068597976805988845 CI: (0.5879633722211199, 0.59998912777888)
Time: 89597 Size: 400 Iter: 10
Mean: 0.59255 SD: 0.005161313591142379 CI: (0.589350984693387, 0.5957490153066131)
Time: 174612 Size: 400 Iter: 20
Mean: 0.5930975 SD: 0.004729338894769434 CI: (0.5910247758415618, 0.5951702241584383)
Rest started taking too long


PercolationUF with QuickFind:
Started
Time: 44 Size: 50 Iter: 5
Mean: 0.58872 SD: 0.01541012654068745 CI: (0.5752124285291546, 0.6022275714708455)
Time: 67 Size: 50 Iter: 10
Mean: 0.58928 SD: 0.010968723211426607 CI: (0.5824815149190753, 0.5960784850809248)
Time: 104 Size: 50 Iter: 20
Mean: 0.59424 SD: 0.01929162348901992 CI: (0.585785073222515, 0.6026949267774849)
Time: 204 Size: 50 Iter: 40
Mean: 0.58483 SD: 0.026304627651754283 CI: (0.5766781114345454, 0.5929818885654545)
Time: 352 Size: 100 Iter: 5
Mean: 0.6026800000000001 SD: 0.009372673044548165 CI: (0.5944644898490722, 0.610895510150928)
Time: 688 Size: 100 Iter: 10
Mean: 0.5929899999999999 SD: 0.015364927595013275 CI: (0.5834667192123721, 0.6025132807876277)
Time: 1250 Size: 100 Iter: 20
Mean: 0.595835 SD: 0.014101708556431246 CI: (0.5896546537295102, 0.6020153462704898)
Time: 2589 Size: 100 Iter: 40
Mean: 0.5928274999999998 SD: 0.014547957606235333 CI: (0.5883190412287509, 0.5973359587712488)
Time: 5058 Size: 200 Iter: 5
Mean: 0.587495 SD: 0.00573330184099878 CI: (0.5824695393604168, 0.5925204606395832)
Time: 9810 Size: 200 Iter: 10
Mean: 0.5928575 SD: 0.009302934498198818 CI: (0.587091481460218, 0.5986235185397821)
Time: 19332 Size: 200 Iter: 20
Mean: 0.5919562500000001 SD: 0.007058355793891236 CI: (0.5888627891805541, 0.595049710819446)
Time: 40116 Size: 200 Iter: 40
Mean: 0.590390625 SD: 0.009954001075942862 CI: (0.5873058481072888, 0.5934754018927111)
Time: 73108 Size: 400 Iter: 5
Mean: 0.59397625 SD: 0.0068597976805988845 CI: (0.5879633722211199, 0.59998912777888)
Started taking too long


PercolationUF with QuickUWPC:
Started
Time: 15 Size: 50 Iter: 5
Mean: 0.31120000000000003 SD: 0.024265201420964964 CI: (0.2899306131729192, 0.3324693868270809)
Time: 9 Size: 50 Iter: 10
Mean: 0.2979200000000001 SD: 0.02765360334165835 CI: (0.28078011907418526, 0.3150598809258149)
Time: 28 Size: 50 Iter: 20
Mean: 0.28995999999999994 SD: 0.023981010030965397 CI: (0.27944985895472474, 0.30047014104527514)
Time: 60 Size: 50 Iter: 40
Mean: 0.28835 SD: 0.023383042288518976 CI: (0.2811035201189359, 0.2955964798810641)
Time: 17 Size: 100 Iter: 5
Mean: 0.29452 SD: 0.008704424162458998 CI: (0.286890235820158, 0.302149764179842)
Time: 24 Size: 100 Iter: 10
Mean: 0.29391 SD: 0.014594553778721701 CI: (0.2848642018505828, 0.3029557981494172)
Time: 46 Size: 100 Iter: 20
Mean: 0.2898450000000001 SD: 0.012341136815331747 CI: (0.2844362583156135, 0.2952537416843867)
Time: 51 Size: 100 Iter: 40
Mean: 0.29117000000000004 SD: 0.011362290307224205 CI: (0.2876487897529255, 0.29469121024707456)
Time: 53 Size: 200 Iter: 5
Mean: 0.291845 SD: 0.008895388552502909 CI: (0.2840478481520494, 0.2996421518479506)
Time: 78 Size: 200 Iter: 10
Mean: 0.2907625 SD: 0.006593991899196328 CI: (0.28667550147826465, 0.2948494985217353)
Time: 136 Size: 200 Iter: 20
Mean: 0.28794749999999997 SD: 0.007431064331928711 CI: (0.2846906924616921, 0.29120430753830784)
Time: 303 Size: 200 Iter: 40
Mean: 0.287245625 SD: 0.009022526807052133 CI: (0.2844495149738993, 0.2900417350261007)
Time: 235 Size: 400 Iter: 5
Mean: 0.28897 SD: 0.007910487253876974 CI: (0.28203615220395273, 0.2959038477960473)
Time: 417 Size: 400 Iter: 10
Mean: 0.290245 SD: 0.005986678498503532 CI: (0.2865344182238121, 0.29395558177618786)
Time: 882 Size: 400 Iter: 20
Mean: 0.289178125 SD: 0.005144627251407137 CI: (0.2869233926944033, 0.2914328573055967)
Time: 1685 Size: 400 Iter: 40
Mean: 0.28841296875 SD: 0.004533692066849186 CI: (0.2870079630221742, 0.2898179744778258)
Time: 1283 Size: 800 Iter: 5
Mean: 0.2868790625 SD: 0.003841156486567159 CI: (0.28351214038965805, 0.29024598461034196)
Time: 2187 Size: 800 Iter: 10
Mean: 0.29038343749999995 SD: 0.002107588518183559 CI: (0.2890771406027756, 0.2916897343972243)
Time: 4213 Size: 800 Iter: 20
Mean: 0.288768046875 SD: 0.0030252801476868397 CI: (0.28744215939100315, 0.2900939343589969)
Time: 8470 Size: 800 Iter: 40
Mean: 0.28886562499999996 SD: 0.0028533779455445782 CI: (0.2879813540133451, 0.2897498959866548)
Started


Problem 1: How does doubling N affect the running time?
PercolationDFS: It multiplied the running time about 14ish times.
PercolationUF with QuickFind: It multiplied the running time about 14ish times.
PercolationUF with QuickUWPC: It multiplied the running time about 5ish times.

Problem 2: How does doubling T affect the running time?
It doubled the time as well for all three. This is probably because
it just runs twice as many tests, keeping the relative change in time the
same.

Problem 3: Measure running time (using calls to System.currentTimeMillis)
of the three versions of your program (DFS, Quick Find, and weighted quick
union with path compression).
3A DFS: Refer to beginning
3B Quick Find: Refer to beginning
3C Weighted quick union with path compression: Refer to beginning

Problem 4: Give a formula (using Big-Oh notation) of the running time on your computer (in seconds) as a function of both N and T.
PercolationDFS: N^4*T (double double for loops cause N^4, linear relationship with T)
PercolationUF with QuickFind: N^4*T
PercolationUF with QuickUWPC: N^2*T

Problem 5: Estimate the largest experiment you could  perform in one
[minute, day, year] assuming your computer has enough memory.
5A 1 minute: 13020.492
5B 1 day: 16435596.48
5C 1 year: 5998407403

Problem 6: Give a formula (using Big-Oh notation) that describes the amount
of memory (in bytes) that your IPercolate implementation consumes as a function of N.
All methods have an N*N grid and N*N+2 union array
(DFS does not have this, but it doesn't change the Big-Oh),
so the total Big-Oh is just N^2

6A DFS: N^2
6B Quick Find: N^2
6C Weighted quick union with path compression: N^2
